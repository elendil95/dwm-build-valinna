From 47cfc435cc1363d512a5f0c41bc614f3ef8658d7 Mon Sep 17 00:00:00 2001
From: Elendil <elendil95@hotmail.it>
Date: Fri, 2 Oct 2020 18:12:14 +0200
Subject: [PATCH] added ability to change change keyboard layout using
 setxkeyboardmap

---
 config.def.h |  2 ++
 dwm.c        | 68 ++++++++++++++++++++++++++++++++++++++++++++++++++++
 2 files changed, 70 insertions(+)

diff --git a/config.def.h b/config.def.h
index 1c0b587..c6a4e07 100644
--- a/config.def.h
+++ b/config.def.h
@@ -1,6 +1,7 @@
 /* See LICENSE file for copyright and license details. */
 
 /* appearance */
+static const char kblayouts[3][3]   = {"it", "dk", "us"}; /* configured keyboard layouts */
 static const unsigned int borderpx  = 1;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const int showbar            = 1;        /* 0 means no bar */
@@ -84,6 +85,7 @@ static Key keys[] = {
 	{ MODKEY,                       XK_period, focusmon,       {.i = +1 } },
 	{ MODKEY|ShiftMask,             XK_comma,  tagmon,         {.i = -1 } },
 	{ MODKEY|ShiftMask,             XK_period, tagmon,         {.i = +1 } },
+    { MODKEY|ControlMask,           XK_space,  change_layout,  {0} },
 	TAGKEYS(                        XK_1,                      0)
 	TAGKEYS(                        XK_2,                      1)
 	TAGKEYS(                        XK_3,                      2)
diff --git a/dwm.c b/dwm.c
index 4465af1..d68a3d5 100644
--- a/dwm.c
+++ b/dwm.c
@@ -34,6 +34,7 @@
 #include <X11/keysym.h>
 #include <X11/Xatom.h>
 #include <X11/Xlib.h>
+#include <X11/XKBlib.h>
 #include <X11/Xproto.h>
 #include <X11/Xutil.h>
 #ifdef XINERAMA
@@ -56,6 +57,7 @@
 #define HEIGHT(X)               ((X)->h + 2 * (X)->bw)
 #define TAGMASK                 ((1 << LENGTH(tags)) - 1)
 #define TEXTW(X)                (drw_fontset_getwidth(drw, (X)) + lrpad)
+#define LEN(x)                  (sizeof (x) / sizeof *(x))
 
 /* enums */
 enum { CurNormal, CurResize, CurMove, CurLast }; /* cursor */
@@ -233,6 +235,9 @@ static int xerror(Display *dpy, XErrorEvent *ee);
 static int xerrordummy(Display *dpy, XErrorEvent *ee);
 static int xerrorstart(Display *dpy, XErrorEvent *ee);
 static void zoom(const Arg *arg);
+static int valid_layout_or_variant(char *sym);
+static char* get_layout();
+static void change_layout();
 
 /* variables */
 static const char broken[] = "broken";
@@ -2124,6 +2129,69 @@ zoom(const Arg *arg)
 	pop(c);
 }
 
+int 
+valid_layout_or_variant(char *sym) 
+{
+	size_t i;
+	/* invalid symbols from xkb rules config */
+	static const char *invalid[] = { "evdev", "inet", "pc", "base" };
+
+	for (i = 0; i < LEN(invalid); i++)
+		if (!strcmp(sym, invalid[i]))
+            return 0;
+
+	return 1;
+}
+
+char* 
+get_layout() 
+{
+    Display *dpy;
+	XkbDescRec *desc;
+	XkbStateRec state;
+	char *symbols, *tok, *layout;
+	int grp;
+	
+    layout = NULL;
+
+	dpy = XOpenDisplay(NULL);
+	desc = XkbAllocKeyboard();
+	XkbGetNames(dpy, XkbSymbolsNameMask, desc);
+	XkbGetState(dpy, XkbUseCoreKbd, &state);
+	symbols = XGetAtomName(dpy, desc->names->symbols);
+
+	layout = NULL;
+	tok = strtok(symbols, "+:");
+	for (grp = 0; tok && grp <= state.group; tok = strtok(NULL, "+:")) {
+		if (!valid_layout_or_variant(tok)) {
+			continue;
+		} else if (strlen(tok) == 1 && tok[0] >= '0' && tok[0] <= '9') {
+			/* ignore :2, :3, :4 (additional layout groups) */
+			continue;
+		}
+		layout = tok;
+		grp++;
+	}
+
+	return layout;
+}
+
+void 
+change_layout() 
+{
+  char* curr_layout = get_layout(), command[13] = "setxkbmap ";
+  int i = 0;
+  for (; i < LEN(kblayouts); ++i)
+    if (!strcmp(curr_layout, kblayouts[i]))
+      break;
+  
+  if (i == LEN(kblayouts) - 1)
+    i = 0;
+  else
+    ++i;
+  system(strcat(command, kblayouts[i]));
+}
+
 int
 main(int argc, char *argv[])
 {
-- 
2.28.0

